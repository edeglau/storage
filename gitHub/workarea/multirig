
meshName=pm.ls(sl=1, fl=1)
mainMesh=[(each) for each in meshName if pm.PyNode(each).nodeType()=="mesh"]
getDriverObjects=[(each) for each in meshName if pm.PyNode(each).nodeType()=="transform"]
try:
	getDriverObjects=[(each) for each in cmds.listRelatives(getDriverObjects, c=1) if pm.PyNode(each).nodeType()=="transform"]	
except:
	getDriverObjects=getDriverObjects
grabItems=[]
getSurfaceObj=pm.PyNode(mainMesh[0]).node()
getParentModelTransform=pm.listRelatives(getSurfaceObj, p=1, typ="transform")[0]
grabDriverPoints=[(item) for item in pm.PyNode(each).vtx for each in getDriverObjects]
pm.select(cl=1)
getRigGrp=pm.group(n=str(getSurfaceObj)+"_Rigs")
pm.select(cl=1)
getRigLocGrp=pm.group(n=str(getSurfaceObj)+"_Locs")
pm.PyNode(getRigLocGrp).visibility.set(0)
pm.select(cl=1)
getRigJntGrp=pm.group(n=str(getSurfaceObj)+"_Jnts")
pm.PyNode(getRigJntGrp).visibility.set(0)
pm.select(cl=1)
getRigCtrlGrp=pm.group(n=str(getSurfaceObj)+"_Ctrl")
pm.select(cl=1)
pm.parent(getRigJntGrp, getRigGrp)
pm.parent(getRigLocGrp, getRigGrp)
pm.parent(getRigCtrlGrp, getRigGrp)
rigPartSet=cmds.sets(n="rigParts_ctrls", co=3)
for each in getDriverObjects:
    for grabDriverPoints in pm.PyNode(each).vtx:
        grabItems.append(grabDriverPoints)
for leadVert in mainMesh:
	rotLocName=leadVert.split(".")[0]+"_"+str(leadVert.index())+"_rloc"
	getrotNew=pm.spaceLocator(n=rotLocName)
	pm.normalConstraint(leadVert, rotLocName)
	rotate=pm.xform(rotLocName, q=1, ws=1, ro=1)
	pm.delete(getrotNew)
	transformWroldMatrix=leadVert.getPosition('world')
	plocName=leadVert.split('.')[0]+"_"+str(leadVert.index())+"_ploc"
    grabDriverPoints=[(eachpoint) for eachpoint in grabItems if transformWroldMatrix==eachpoint.getPosition("world")]
    getUVmap = pm.polyListComponentConversion(leadVert, fv=1, tuv=1)
    getCoords=pm.polyEditUV(getUVmap, q=1)
    plocName=leadVert.split(".")[0]+"_"+str(leadVert.index())+"_ploc"
    getNew=pm.spaceLocator(n=plocName)
    pm.parent(getNew, getRigLocGrp)
    pm.select(leadVert, r=1)
    pm.select(getNew, add=1)
    buildConst=pm.pointOnPolyConstraint(leadVert, getNew, mo=1, offset=(0.0,0.0,0.0))
    pm.setAttr(buildConst[0]+"."+getObj+"U0", getCoords[0])
    pm.setAttr(buildConst[0]+"."+getObj+"V0", getCoords[1])   
    pm.select(cl=1)
    jointName=str(grabDriverPoints[0].split(".")[0])+"_"+str(leadVert.index())+"_jnt"
    getjoint=pm.joint(n=jointName)
    pm.xform(jointName, ws=1, t=leadVert.getPosition("world"))
    pm.parent(getjoint, getNew)
    getMeshName=grabDriverPoints[0].node()
    pm.skinCluster(jointName, getMeshName)
    ctrlName=str(grabDriverPoints.split(".")[0])+"_"+str(leadVert.index())+"_Ctrl"
    grpname=str(grabDriverPoints.split(".")[0])+"_"+str(leadVert.index())+"_grp"
    num0, num1, num2, num3=.01, .008, .018, .014, 22
    colour=13
    ctrlShape=baseClass.CCCircle(ctrlName, grpname, num0, num1, num2, num3 )
    pm.PyNode(ctrlShape).overrideEnabled.set(1)
    pm.PyNode(ctrlShape).overrideColor.set(colour)
    #pm.setAttr(ctrlShape+".overrideEnabled
    pm.group(n=grpname)
    cmds.sets(ctrlName, add=rigPartSet)
    grpObj=pm.ls(sl=1)
    pm.xform(grpObj[0], ws=1, t=transformWroldMatrix)
    pm.xform(grpObj[0], ws=1, ro=rotate)
    pm.parentConstraint(getNew, grpObj, mo=1)
    pm.parentConstraint(ctrlName, getJoint, mo=1)
    pm.parent(grpname, getRigCtrlGrp)
